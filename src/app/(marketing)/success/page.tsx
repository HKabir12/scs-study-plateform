"use client";

import React, { useState } from "react";
import Navbar from "@/components/layout/Navbar";
import Footer from "@/components/layout/Footer";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/button";
import Image from "next/image";
import { ChevronRight } from "lucide-react";
import {
  Pagination,
  PaginationContent,
  PaginationItem,
  PaginationNext,
  PaginationPrevious,
} from "@/components/ui/pagination";

const SuccessPage = () => {
  const [selectedBatch, setSelectedBatch] = useState("All");
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const [selectedStudent, setSelectedStudent] = useState<any>(null);
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 6;

  const students = [
    {
      name: "‡¶π‡ßÅ‡¶Æ‡¶æ‡ßü‡¶® ‡¶ï‡¶¨‡¶ø‡¶∞",
      batch: "HSC-21",
      university: "‡¶ú‡¶æ‡¶π‡¶æ‡¶ô‡ßç‡¶ó‡ßÄ‡¶∞‡¶®‡¶ó‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü",
      subject: "‡¶§‡¶•‡ßç‡¶Ø ‡¶ì ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶™‡ßç‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡¶ø‡¶ü‡¶ø‡¶â‡¶ü IIT",
      desc: "Safwan ‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶Æ‡¶ø admission ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡ßü ‡¶Ö‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡ßç‡¶Æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡ßá‡¶∞‡ßá‡¶õ‡¶ø‡•§",
      img: "https://i.ibb.co.com/CKZHz6JY/kabir-resume.jpg",
    },
    {
      name: "‡¶ú‡¶æ‡¶¨‡¶ø‡¶∞ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®",
      batch: "HSC-22",
      university: "‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡ßü",
      subject: "‡¶¨‡¶æ‡ßü‡ßã‡¶ï‡ßá‡¶Æ‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø",
      desc: "‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶è‡¶§ ‡¶∏‡¶π‡¶ú ‡¶Ø‡ßá ‡¶ï‡¶†‡¶ø‡¶® ‡¶¨‡¶ø‡¶∑‡ßü‡¶ó‡ßÅ‡¶≤‡ßã‡¶ì ‡¶∏‡¶π‡¶ú‡ßá ‡¶¨‡ßÅ‡¶ù‡ßá ‡¶´‡ßá‡¶≤‡ßá‡¶õ‡¶ø!",
      img: "https://i.ibb.co.com/tMbhBq4Q/zabir.jpg",
    },
    {
      name: "‡¶Æ‡ßá‡¶π‡ßá‡¶¶‡¶ø ‡¶∞‡¶π‡¶Æ‡¶æ‡¶®",
      batch: "HSC-23",
      university: "BUET",
      subject: "Chemical Engineering",
      desc: "‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡ßú‡¶æ‡¶®‡ßã Organic Chemistry ‡¶è‡¶∞ ‡¶ï‡¶®‡¶∏‡ßá‡¶™‡ßç‡¶ü ‡¶è‡¶ñ‡¶®‡ßã ‡¶Æ‡¶®‡ßá ‡¶Ü‡¶õ‡ßá!",
      img: "https://images.unsplash.com/photo-1517841905240-472988babdf9?q=80&w=3000&auto=format&fit=crop",
    },
    {
      name: "‡¶§‡¶æ‡¶∏‡¶≤‡¶ø‡¶Æ‡¶æ ‡¶Ü‡¶ï‡ßç‡¶§‡¶æ‡¶∞",
      batch: "HSC-24",
      university: "‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶Æ‡ßá‡¶°‡¶ø‡¶ï‡ßá‡¶≤ ‡¶ï‡¶≤‡ßá‡¶ú",
      subject: "MBBS",
      desc: "Crash course ‡¶è ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶∞‡¶ø‡¶≠‡¶ø‡¶∂‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶Ø‡ßã‡¶ó ‡¶™‡ßá‡ßü‡ßá‡¶õ‡¶ø‡¶≤‡¶æ‡¶Æ, ‡¶Ø‡¶æ ‡¶Ö‡¶®‡ßá‡¶ï ‡¶π‡ßá‡¶≤‡ßç‡¶™‡¶´‡ßÅ‡¶≤ ‡¶õ‡¶ø‡¶≤‡•§",
      img: "https://images.unsplash.com/photo-1494790108377-be9c29b29330?q=80&w=3000&auto=format&fit=crop",
    },
    {
      name: "‡¶ú‡¶æ‡¶∞‡¶ø‡¶´ ‡¶ñ‡¶æ‡¶®",
      batch: "HSC-24",
      university: "KUET",
      subject: "Materials Science",
      desc: "‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡ßú‡¶æ‡¶®‡ßã‡¶∞ ‡¶ß‡¶∞‡¶£‡ßá Chemistry ‡¶è‡¶ñ‡¶® ‡¶Ö‡¶®‡ßá‡¶ï ‡¶™‡ßç‡¶∞‡¶ø‡ßü ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶õ‡ßá‡•§",
      img: "https://images.unsplash.com/photo-1519345182560-3f2917c472ef?q=80&w=3000&auto=format&fit=crop",
    },
    {
      name: "‡¶∞‡ßÅ‡¶Æ‡¶æ‡¶®‡¶æ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ",
      batch: "HSC-23",
      university: "Dhaka Medical College",
      subject: "MBBS",
      desc: "Safwan ‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ï‡¶®‡¶∏‡ßá‡¶™‡ßç‡¶ü ‡¶ï‡ßç‡¶≤‡¶ø‡ßü‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ style ‡¶è‡¶ï‡¶¶‡¶Æ ‡¶á‡¶â‡¶®‡¶ø‡¶ï!",
      img: "https://images.unsplash.com/photo-1595152772835-219674b2a8a6?q=80&w=3000&auto=format&fit=crop",
    },
  ];

  // Filter & Pagination
  const filtered =
    selectedBatch === "All"
      ? students
      : students.filter((s) => s.batch === selectedBatch);
  const totalPages = Math.ceil(filtered.length / itemsPerPage);
  const paginated = filtered.slice(
    (currentPage - 1) * itemsPerPage,
    currentPage * itemsPerPage
  );

  return (
    <>
      <Navbar />
      <div className="max-w-7xl mx-auto px-6 md:px-10 py-12">
        {/* Header */}
        <div className="grid md:grid-cols-2 gap-6 mb-10 items-center">
          <div>
            <h1 className="text-4xl md:text-5xl font-bold text-black dark:text-white mb-4">
              ‡¶∏‡¶´‡¶≤ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞‡¶æ
            </h1>
            <p className="text-gray-600 dark:text-gray-300 text-base md:text-lg">
              ‡¶∏‡¶´‡¶≤ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ‡¶Ø‡¶º ‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡ßç‡¶¨‡¶™‡ßç‡¶® ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßá‡¶õ‡ßá,
              ‡¶∏‡ßá‡¶á ‡¶∏‡¶´‡¶≤ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶®‡•§
            </p>
          </div>

          {/* Dropdown */}
          <div className="flex md:justify-end justify-center">
            <Select onValueChange={setSelectedBatch}>
              <SelectTrigger className="w-[200px] bg-white dark:bg-zinc-900 border border-gray-300 dark:border-zinc-700">
                <SelectValue placeholder="‡¶∏‡¶¨ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="All">‡¶∏‡¶¨ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö</SelectItem>
                <SelectItem value="HSC-21">HSC-21</SelectItem>
                <SelectItem value="HSC-22">HSC-22</SelectItem>
                <SelectItem value="HSC-23">HSC-23</SelectItem>
                <SelectItem value="HSC-24">HSC-24</SelectItem>
                <SelectItem value="HSC-25">HSC-25</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>

        {/* Cards */}
        <div className="grid md:grid-cols-2 gap-8">
          {paginated.map((student, index) => (
            <motion.div
              key={index}
              whileHover={{ scale: 1.02 }}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.4 }}
              className="flex bg-white dark:bg-zinc-900 shadow-md rounded-xl overflow-hidden border border-gray-200 dark:border-zinc-700"
            >
              {/* Image */}
              <div className="relative w-40 h-40 flex-shrink-0">
                <Image
                  src={student.img}
                  alt={student.name}
                  fill
                  className="object-cover"
                />
                <div className="absolute bottom-0 left-0 right-0 bg-emerald-600 text-white text-sm text-center py-1 font-semibold">
                  {student.batch}
                </div>
              </div>

              {/* Content */}
              <div className="p-4 flex flex-col justify-between">
                <div>
                  <h3 className="font-bold text-lg text-emerald-700 dark:text-emerald-400">
                    {student.name}
                  </h3>
                  <p className="text-gray-600 dark:text-gray-300 text-sm">
                    üéì {student.university}
                  </p>
                  <p className="text-gray-500 text-sm mb-2">
                    üìò {student.subject}
                  </p>
                  <p className="text-gray-700 dark:text-gray-300 text-sm line-clamp-2">
                    {student.desc}
                  </p>
                </div>

                <Button
                  onClick={() => setSelectedStudent(student)}
                  variant="ghost"
                  size="sm"
                  className="text-emerald-600 hover:text-emerald-700 mt-2 flex items-center gap-1"
                >
                  ‡¶Ü‡¶∞‡¶ì ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶® <ChevronRight size={16} />
                </Button>
              </div>
            </motion.div>
          ))}
        </div>

        {/* Pagination */}
        <div className="mt-10 flex justify-center">
          <Pagination>
            <PaginationContent>
              <PaginationItem>
                <PaginationPrevious
                  onClick={() => setCurrentPage((p) => Math.max(1, p - 1))}
                  aria-disabled={currentPage === 1}
                />
              </PaginationItem>
              <PaginationItem className="text-sm text-gray-700 dark:text-gray-300">
                {currentPage} / {totalPages}
              </PaginationItem>
              <PaginationItem>
                <PaginationNext
                  onClick={() =>
                    setCurrentPage((p) => Math.min(totalPages, p + 1))
                  }
                  aria-disabled={currentPage === totalPages}
                />
              </PaginationItem>
            </PaginationContent>
          </Pagination>
        </div>
      </div>

      {/* Dialog */}
      <Dialog
        open={!!selectedStudent}
        onOpenChange={() => setSelectedStudent(null)}
      >
        <DialogContent className="max-w-lg">
          {selectedStudent && (
            <>
              <DialogHeader>
                <DialogTitle className="text-emerald-600">
                  {selectedStudent.name}
                </DialogTitle>
                <DialogDescription>
                  {selectedStudent.batch} | {selectedStudent.university}
                </DialogDescription>
              </DialogHeader>
              <div className="mt-3">
                <p className="text-gray-700 dark:text-gray-300 text-sm">
                  {selectedStudent.desc}
                </p>
              </div>
            </>
          )}
        </DialogContent>
      </Dialog>

      <Footer />
    </>
  );
};

export default SuccessPage;
